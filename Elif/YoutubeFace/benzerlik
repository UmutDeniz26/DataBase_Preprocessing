import os
import cv2
from skimage.metrics import structural_similarity as ssim

def benzerlik_orani_hesapla(img1, img2):
    benzerlik_orani, _ = ssim( img1, img2, full=True)
    return benzerlik_orani

def klasor_benzerlik_kontrolu(klasor_yolu, output_file): #,file
    gorsel_yollar = [os.path.join(klasor_yolu, gorsel) for gorsel in os.listdir(klasor_yolu) if gorsel.endswith(('.jpg', '.jpeg', '.png'))]
    i = 0
    highScoreCnt = 0
    #with open(output_file, 'a') as file:
    while i < len(gorsel_yollar)-1:
        gorsel1 = cv2.imread(gorsel_yollar[i], cv2.IMREAD_GRAYSCALE)
        gorsel2 = cv2.imread(gorsel_yollar[i+1], cv2.IMREAD_GRAYSCALE)

        gorsel1 = cv2.resize(gorsel1, (400, 400))
        gorsel2 = cv2.resize(gorsel2, (400, 400))

        benzerlik12 = benzerlik_orani_hesapla(gorsel1, gorsel2)
        
        i+=1
    
        #print("File Name: " + str(gorsel_yollar[i]) +"   Score: "+str(benzerlik12))
            
        percentage = highScoreCnt / len(gorsel_yollar)
        
        if benzerlik12 >= 0.9:
            # İki görsel de %90'ın üzerinde benzerlik oranına sahipse bir sonraki çiftle devam et
            highScoreCnt+=1
            True
        else:
            False
    
    #output_file = './Elif/YoutubeFace/benzerlik_oranları.txt'
    #file = open('./Elif/YoutubeFace/benzerlik_oranları.txt', "a")
    if percentage >= 0.7:
        with open(output_file, 'a') as file:
            #file.write( f"    High score nums: {highScoreCnt}    Total length: {len(gorsel_yollar)}      Percentage:  {percentage}\n\n")
            file.write( f"    {klasor_yolu}     Percentage:  {percentage}\n\n")
  
    print("High score nums: " + str(highScoreCnt) + "    Total length: "+ str(len(gorsel_yollar))  +  "    Percentage: "+ str(percentage) )
    return True

def main():
        # Veri setinin bulunduğu dizin
        dataset_path = './Elif/YoutubeFace/New_YoutubeFace'
        output_file = './Elif/YoutubeFace/new_benzerlik_oranları.txt'
        
        file = open('./Elif/YoutubeFace/new_benzerlik_oranları.txt', "a")
        #with open(output_file, 'w') as file:
        #file.write("Benzerlik Oranlari\n\n")

        for person_name in os.listdir(dataset_path):
            person_path = os.path.join(dataset_path, person_name)
            if os.path.isdir(person_path):
                for subfolder_name in os.listdir(person_path):
                    subfolder_path = os.path.join(person_path, subfolder_name)
                    #file.write(subfolder_path )
                    #file.close()
                    print(subfolder_path)
                    #file.write(subfolder_path)
                    if os.path.isdir(subfolder_path):
                        
                        #print(image_file)
                        klasor_benzerlik_kontrolu(subfolder_path, output_file) #, file
                        
                        #if klasor_benzerlik_kontrolu(subfolder_path):
                        #print(f"{person_name}: Tüm görsellerde benzerlik oranı %90'ın üzerinde.")    
                            #print("{person_name}_{subfolder_name}: benzerlik_orani")    


if __name__ == "__main__":
    main()
